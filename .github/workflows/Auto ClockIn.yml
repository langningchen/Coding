name: Auto ClockIn
on:
  schedule:
    - cron:  '38 21 * * *'
  workflow_dispatch: 
jobs:
  ClockIn:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install openssl
      run: |
        wget https://www.openssl.org/source/old/1.1.1/openssl-1.1.1q.tar.gz
        tar -zxf openssl-1.1.1q.tar.gz
        rm openssl-1.1.1q.tar.gz
        cd ./openssl-1.1.1q/
        ./config
        make
        sudo make install
        cd ../
        rm -f -r ./openssl-1.1.1q/
        sudo cp /usr/local/lib/libssl.* /usr/lib
    - name: Install libcurl
      run: |
        wget https://curl.se/download/curl-7.85.0.tar.gz
        tar -zxf curl-7.85.0.tar.gz
        rm curl-7.85.0.tar.gz
        cd ./curl-7.85.0/
        ./configure --with-openssl
        make
        sudo make install
        cd ../
        rm -f -r ./curl-7.85.0/
        sudo cp /usr/local/lib/libcurl.* /usr/lib
    - name: Install libjpeg
      run: |
        wget http://www.ijg.org/files/jpegsrc.v9e.tar.gz
        tar -zxf jpegsrc.v9e.tar.gz
        rm jpegsrc.v9e.tar.gz
        cd ./jpeg-9e/
        ./configure
        make
        sudo make install
        cd ../
        rm -f -r ./jpeg-9e/
        sudo cp /usr/local/lib/libjpeg.* /usr/lib
    - name: Install libcrypto
      run: |
        sudo cp /usr/local/lib/libcrypto.* /usr/lib
    - name: Install libtidy
      run: |
        wget https://codeload.github.com/htacg/tidy-html5/zip/refs/heads/next
        unzip next
        rm next
        cd ./tidy-html5-next/build/cmake
        cmake ../.. -DCMAKE_BUILD_TYPE=Release
        make
        sudo make install
        cd ../../../
        rm -f -r ./tidy-html5-next/
        sudo cp /usr/local/lib/libtidy.* /usr/lib
    - name: Make OJTool
      run: |
        cd ./Projects/OJTool
        echo "cmake_minimum_required(VERSION 3.9) " > CMakeLists.txt
        echo "project(OJTool)" >> CMakeLists.txt
        echo "" >> CMakeLists.txt
        echo "set(CMAKE_CXX_COMPILER \"g++\")" >> CMakeLists.txt
        echo "set(CMAKE_CXX_FLAGS \"\${CMAKE_CXX_FLAGS} -W -std=c++11\")" >> CMakeLists.txt
        echo "" >> CMakeLists.txt
        echo "add_executable(main main.cpp)" >> CMakeLists.txt
        echo -n "target_include_directories(main PUBLIC " >> CMakeLists.txt
        echo -n $(pwd) >> CMakeLists.txt
        echo "/../../Lib)" >> CMakeLists.txt
        echo "" >> CMakeLists.txt
        echo "find_library(LIBCURL curl REQUIRED)" >> CMakeLists.txt
        echo "find_library(LIBJPEG jpeg REQUIRED)" >> CMakeLists.txt
        echo "find_library(LIBTIDY tidy REQUIRED)" >> CMakeLists.txt
        echo "set(LIBS" >> CMakeLists.txt
        echo "    \${LIBCURL}" >> CMakeLists.txt
        echo "    \${LIBJPEG}" >> CMakeLists.txt
        echo "    \${LIBTIDY}" >> CMakeLists.txt
        echo ")" >> CMakeLists.txt
        echo "target_link_libraries(main PRIVATE \${LIBS})" >> CMakeLists.txt
        rm -rf build/
        mkdir build/
        cd ./build
        cmake ../
        make
    - name: ClockIn for Etiger
      run: ./main Etiger "${{ secrets.ETIGER_USERNAME }}" "${{ secrets.ETIGER_PASSWORD }}"
    - name: ClockIn for Luogu
      run: ./main Luogu "${{ secrets.LUOGU_USERNAME }}" "${{ secrets.LUOGU_PASSWORD }}"
